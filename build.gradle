plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.jihui.admin'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    //implementation 'org.springframework.boot:spring-boot-starter-mustache' // JSP를 사용하기 위해서 주석처리함.
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
    //implementation 'com.oracle.ojdbc:orai18n:19.3.0.0'
    implementation 'com.oracle.database.jdbc:ojdbc8'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:10.1.2' // jsp를 읽어들이도록 하기위한 설정
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상
    implementation 'javax.servlet:jstl:1.2' //jstl을 사용하기 설정값




}

tasks.named('test') {
    useJUnitPlatform()
}
